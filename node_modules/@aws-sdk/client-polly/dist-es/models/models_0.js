import { SENSITIVE_STRING } from "@aws-sdk/smithy-client";
import { PollyServiceException as __BaseException } from "./PollyServiceException";
export class LexiconNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "LexiconNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "LexiconNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LexiconNotFoundException.prototype);
    }
}
export class ServiceFailureException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceFailureException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceFailureException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceFailureException.prototype);
    }
}
export var Engine;
(function (Engine) {
    Engine["NEURAL"] = "neural";
    Engine["STANDARD"] = "standard";
})(Engine || (Engine = {}));
export var LanguageCode;
(function (LanguageCode) {
    LanguageCode["ar_AE"] = "ar-AE";
    LanguageCode["arb"] = "arb";
    LanguageCode["ca_ES"] = "ca-ES";
    LanguageCode["cmn_CN"] = "cmn-CN";
    LanguageCode["cy_GB"] = "cy-GB";
    LanguageCode["da_DK"] = "da-DK";
    LanguageCode["de_AT"] = "de-AT";
    LanguageCode["de_DE"] = "de-DE";
    LanguageCode["en_AU"] = "en-AU";
    LanguageCode["en_GB"] = "en-GB";
    LanguageCode["en_GB_WLS"] = "en-GB-WLS";
    LanguageCode["en_IN"] = "en-IN";
    LanguageCode["en_NZ"] = "en-NZ";
    LanguageCode["en_US"] = "en-US";
    LanguageCode["en_ZA"] = "en-ZA";
    LanguageCode["es_ES"] = "es-ES";
    LanguageCode["es_MX"] = "es-MX";
    LanguageCode["es_US"] = "es-US";
    LanguageCode["fi_FI"] = "fi-FI";
    LanguageCode["fr_CA"] = "fr-CA";
    LanguageCode["fr_FR"] = "fr-FR";
    LanguageCode["hi_IN"] = "hi-IN";
    LanguageCode["is_IS"] = "is-IS";
    LanguageCode["it_IT"] = "it-IT";
    LanguageCode["ja_JP"] = "ja-JP";
    LanguageCode["ko_KR"] = "ko-KR";
    LanguageCode["nb_NO"] = "nb-NO";
    LanguageCode["nl_NL"] = "nl-NL";
    LanguageCode["pl_PL"] = "pl-PL";
    LanguageCode["pt_BR"] = "pt-BR";
    LanguageCode["pt_PT"] = "pt-PT";
    LanguageCode["ro_RO"] = "ro-RO";
    LanguageCode["ru_RU"] = "ru-RU";
    LanguageCode["sv_SE"] = "sv-SE";
    LanguageCode["tr_TR"] = "tr-TR";
    LanguageCode["yue_CN"] = "yue-CN";
})(LanguageCode || (LanguageCode = {}));
export var Gender;
(function (Gender) {
    Gender["Female"] = "Female";
    Gender["Male"] = "Male";
})(Gender || (Gender = {}));
export var VoiceId;
(function (VoiceId) {
    VoiceId["Aditi"] = "Aditi";
    VoiceId["Adriano"] = "Adriano";
    VoiceId["Amy"] = "Amy";
    VoiceId["Andres"] = "Andres";
    VoiceId["Aria"] = "Aria";
    VoiceId["Arlet"] = "Arlet";
    VoiceId["Arthur"] = "Arthur";
    VoiceId["Astrid"] = "Astrid";
    VoiceId["Ayanda"] = "Ayanda";
    VoiceId["Bianca"] = "Bianca";
    VoiceId["Brian"] = "Brian";
    VoiceId["Camila"] = "Camila";
    VoiceId["Carla"] = "Carla";
    VoiceId["Carmen"] = "Carmen";
    VoiceId["Celine"] = "Celine";
    VoiceId["Chantal"] = "Chantal";
    VoiceId["Conchita"] = "Conchita";
    VoiceId["Cristiano"] = "Cristiano";
    VoiceId["Daniel"] = "Daniel";
    VoiceId["Dora"] = "Dora";
    VoiceId["Elin"] = "Elin";
    VoiceId["Emma"] = "Emma";
    VoiceId["Enrique"] = "Enrique";
    VoiceId["Ewa"] = "Ewa";
    VoiceId["Filiz"] = "Filiz";
    VoiceId["Gabrielle"] = "Gabrielle";
    VoiceId["Geraint"] = "Geraint";
    VoiceId["Giorgio"] = "Giorgio";
    VoiceId["Gwyneth"] = "Gwyneth";
    VoiceId["Hala"] = "Hala";
    VoiceId["Hannah"] = "Hannah";
    VoiceId["Hans"] = "Hans";
    VoiceId["Hiujin"] = "Hiujin";
    VoiceId["Ida"] = "Ida";
    VoiceId["Ines"] = "Ines";
    VoiceId["Ivy"] = "Ivy";
    VoiceId["Jacek"] = "Jacek";
    VoiceId["Jan"] = "Jan";
    VoiceId["Joanna"] = "Joanna";
    VoiceId["Joey"] = "Joey";
    VoiceId["Justin"] = "Justin";
    VoiceId["Kajal"] = "Kajal";
    VoiceId["Karl"] = "Karl";
    VoiceId["Kazuha"] = "Kazuha";
    VoiceId["Kendra"] = "Kendra";
    VoiceId["Kevin"] = "Kevin";
    VoiceId["Kimberly"] = "Kimberly";
    VoiceId["Laura"] = "Laura";
    VoiceId["Lea"] = "Lea";
    VoiceId["Liam"] = "Liam";
    VoiceId["Liv"] = "Liv";
    VoiceId["Lotte"] = "Lotte";
    VoiceId["Lucia"] = "Lucia";
    VoiceId["Lupe"] = "Lupe";
    VoiceId["Mads"] = "Mads";
    VoiceId["Maja"] = "Maja";
    VoiceId["Marlene"] = "Marlene";
    VoiceId["Mathieu"] = "Mathieu";
    VoiceId["Matthew"] = "Matthew";
    VoiceId["Maxim"] = "Maxim";
    VoiceId["Mia"] = "Mia";
    VoiceId["Miguel"] = "Miguel";
    VoiceId["Mizuki"] = "Mizuki";
    VoiceId["Naja"] = "Naja";
    VoiceId["Nicole"] = "Nicole";
    VoiceId["Ola"] = "Ola";
    VoiceId["Olivia"] = "Olivia";
    VoiceId["Pedro"] = "Pedro";
    VoiceId["Penelope"] = "Penelope";
    VoiceId["Raveena"] = "Raveena";
    VoiceId["Remi"] = "Remi";
    VoiceId["Ricardo"] = "Ricardo";
    VoiceId["Ruben"] = "Ruben";
    VoiceId["Russell"] = "Russell";
    VoiceId["Ruth"] = "Ruth";
    VoiceId["Salli"] = "Salli";
    VoiceId["Seoyeon"] = "Seoyeon";
    VoiceId["Sergio"] = "Sergio";
    VoiceId["Stephen"] = "Stephen";
    VoiceId["Suvi"] = "Suvi";
    VoiceId["Takumi"] = "Takumi";
    VoiceId["Tatyana"] = "Tatyana";
    VoiceId["Thiago"] = "Thiago";
    VoiceId["Tomoko"] = "Tomoko";
    VoiceId["Vicki"] = "Vicki";
    VoiceId["Vitoria"] = "Vitoria";
    VoiceId["Zeina"] = "Zeina";
    VoiceId["Zhiyu"] = "Zhiyu";
})(VoiceId || (VoiceId = {}));
export class InvalidNextTokenException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidNextTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidNextTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidNextTokenException.prototype);
    }
}
export class EngineNotSupportedException extends __BaseException {
    constructor(opts) {
        super({
            name: "EngineNotSupportedException",
            $fault: "client",
            ...opts,
        });
        this.name = "EngineNotSupportedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, EngineNotSupportedException.prototype);
    }
}
export var OutputFormat;
(function (OutputFormat) {
    OutputFormat["JSON"] = "json";
    OutputFormat["MP3"] = "mp3";
    OutputFormat["OGG_VORBIS"] = "ogg_vorbis";
    OutputFormat["PCM"] = "pcm";
})(OutputFormat || (OutputFormat = {}));
export var SpeechMarkType;
(function (SpeechMarkType) {
    SpeechMarkType["SENTENCE"] = "sentence";
    SpeechMarkType["SSML"] = "ssml";
    SpeechMarkType["VISEME"] = "viseme";
    SpeechMarkType["WORD"] = "word";
})(SpeechMarkType || (SpeechMarkType = {}));
export var TaskStatus;
(function (TaskStatus) {
    TaskStatus["COMPLETED"] = "completed";
    TaskStatus["FAILED"] = "failed";
    TaskStatus["IN_PROGRESS"] = "inProgress";
    TaskStatus["SCHEDULED"] = "scheduled";
})(TaskStatus || (TaskStatus = {}));
export var TextType;
(function (TextType) {
    TextType["SSML"] = "ssml";
    TextType["TEXT"] = "text";
})(TextType || (TextType = {}));
export class InvalidTaskIdException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidTaskIdException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidTaskIdException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidTaskIdException.prototype);
    }
}
export class SynthesisTaskNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "SynthesisTaskNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "SynthesisTaskNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, SynthesisTaskNotFoundException.prototype);
    }
}
export class InvalidLexiconException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidLexiconException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidLexiconException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidLexiconException.prototype);
    }
}
export class InvalidS3BucketException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidS3BucketException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidS3BucketException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidS3BucketException.prototype);
    }
}
export class InvalidS3KeyException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidS3KeyException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidS3KeyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidS3KeyException.prototype);
    }
}
export class InvalidSampleRateException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidSampleRateException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSampleRateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSampleRateException.prototype);
    }
}
export class InvalidSnsTopicArnException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidSnsTopicArnException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSnsTopicArnException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSnsTopicArnException.prototype);
    }
}
export class InvalidSsmlException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidSsmlException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSsmlException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSsmlException.prototype);
    }
}
export class LanguageNotSupportedException extends __BaseException {
    constructor(opts) {
        super({
            name: "LanguageNotSupportedException",
            $fault: "client",
            ...opts,
        });
        this.name = "LanguageNotSupportedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LanguageNotSupportedException.prototype);
    }
}
export class LexiconSizeExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LexiconSizeExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LexiconSizeExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LexiconSizeExceededException.prototype);
    }
}
export class MarksNotSupportedForFormatException extends __BaseException {
    constructor(opts) {
        super({
            name: "MarksNotSupportedForFormatException",
            $fault: "client",
            ...opts,
        });
        this.name = "MarksNotSupportedForFormatException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MarksNotSupportedForFormatException.prototype);
    }
}
export class MaxLexemeLengthExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "MaxLexemeLengthExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "MaxLexemeLengthExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MaxLexemeLengthExceededException.prototype);
    }
}
export class MaxLexiconsNumberExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "MaxLexiconsNumberExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "MaxLexiconsNumberExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MaxLexiconsNumberExceededException.prototype);
    }
}
export class UnsupportedPlsAlphabetException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnsupportedPlsAlphabetException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedPlsAlphabetException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedPlsAlphabetException.prototype);
    }
}
export class UnsupportedPlsLanguageException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnsupportedPlsLanguageException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedPlsLanguageException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedPlsLanguageException.prototype);
    }
}
export class SsmlMarksNotSupportedForTextTypeException extends __BaseException {
    constructor(opts) {
        super({
            name: "SsmlMarksNotSupportedForTextTypeException",
            $fault: "client",
            ...opts,
        });
        this.name = "SsmlMarksNotSupportedForTextTypeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, SsmlMarksNotSupportedForTextTypeException.prototype);
    }
}
export class TextLengthExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "TextLengthExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "TextLengthExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TextLengthExceededException.prototype);
    }
}
export const DeleteLexiconInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteLexiconOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeVoicesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VoiceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeVoicesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetLexiconInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LexiconFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Content && { Content: SENSITIVE_STRING }),
});
export const LexiconAttributesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetLexiconOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Lexicon && { Lexicon: LexiconFilterSensitiveLog(obj.Lexicon) }),
});
export const GetSpeechSynthesisTaskInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SynthesisTaskFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetSpeechSynthesisTaskOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LexiconDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListLexiconsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListLexiconsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSpeechSynthesisTasksInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSpeechSynthesisTasksOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutLexiconInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Content && { Content: SENSITIVE_STRING }),
});
export const PutLexiconOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartSpeechSynthesisTaskInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartSpeechSynthesisTaskOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SynthesizeSpeechInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SynthesizeSpeechOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
